---
title: "MultiLR: Predictive models"
subtitle: "STA 210 - Spring 2022"
author: "Dr. Mine Ã‡etinkaya-Rundel"
footer: "[sta210-s22.github.io/website](https://sta210-s22.github.io/website/)"
logo: "images/logo.png"
format: 
  revealjs:
    theme: slides.scss
    transition: fade
    slide-number: true
    incremental: true 
    chalkboard: true
    highlight-style: ayu-mirage
code-link: true
editor: visual
execute:
  freeze: auto
  echo: true
---

```{r}
#| include: false

# figure options
knitr::opts_chunk$set(
  fig.width = 8, fig.asp = 0.618, out.width = "90%",
  fig.retina = 3, dpi = 300, fig.align = "center"
)

library(countdown)
```

# Welcome

## Topics

::: nonincremental
-   Building predictive multinomial logistic regression models
-   Comparing models
:::

## Computational setup

```{r}
#| echo: true

# load packages
library(tidyverse)
library(tidymodels)
library(knitr)
library(colorblindr)
library(themis)

# set default theme and larger font size for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 16))
```

## Terminology

::: question
What's the difference between regression and classification?

::: nonincremental
-   Logistic regression / binary classification
-   Multinomial logistic regression / multinomial classification
:::
:::

# Data

## Volcanoes

The data come from [The Smithsonian Institution](https://volcano.si.edu/), via [TidyTuesday](https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-05-12/readme.md).

```{r}
#| warning: false

volcano <- read_csv(here::here("slides", "data/volcano.csv"))
names(volcano)
```

## Volcanoes {.smaller}

```{r}
glimpse(volcano)
```

## Types of volcanoes {.smaller}

Probably too many types!

```{r}
volcano %>%
  count(primary_volcano_type, sort = TRUE) %>%
  print(n = 26)
```

## Relevel volcanoes

```{r}
volcano <- volcano %>%
  mutate(
    volcano_type = case_when(
      str_detect(primary_volcano_type, "Stratovolcano") ~ "Stratovolcano",
      str_detect(primary_volcano_type, "Shield") ~ "Shield",
      TRUE ~ "Other"
    ),
    volcano_type = fct_relevel(volcano_type, "Stratovolcano", "Shield", "Other")
  )

volcano %>%
  count(volcano_type)
```

## Data prep

-   Select a few variables as predictors for the model with
-   Convert all character variables to factors

. . .

```{r}
volcano <- volcano %>%
  select(
    volcano_type, latitude, longitude, 
    elevation, tectonic_settings, major_rock_1
    ) %>%
  mutate(across(where(is.character), as_factor))
```

## Mapping the volcanoes

```{r}
#| echo: false

world <- map_data("world")

ggplot() +
  geom_polygon(
    data = world, 
    aes(x = long, y = lat, group = group),
    color = "white", fill = "gray50", size = 0.05, alpha = 0.2
  ) +
  geom_point(
    data = volcano,
    aes(x = longitude, y = latitude, 
        color = volcano_type, shape = volcano_type),
    alpha = 0.8
  ) +
  scale_color_OkabeIto() +
  theme_minimal() +
  coord_quickmap() +
  labs(x = NULL, y = NULL, color = NULL, shape = NULL)
```

## World map data

```{r}
world <- map_data("world")

world %>% as_tibble()
```

## Draw world map

```{r}
#| output-location: column-fragment

world_map <- ggplot() +
  geom_polygon(
    data = world, 
    aes(
      x = long, y = lat, group = group),
      color = "white", fill = "gray50", 
      size = 0.05, alpha = 0.2
    ) +
  theme_minimal() +
  coord_quickmap() +
  labs(x = NULL, y = NULL)

world_map
```

## Add volcanoes

```{r}
#| output-location: column-fragment

world_map +
  geom_point(
    data = volcano,
    aes(
      x = longitude, y = latitude, 
      color = volcano_type, 
      shape = volcano_type),
    alpha = 0.5
  ) +
  scale_color_OkabeIto() +
  labs(color = NULL, shape = NULL)
```

## Your turn

::: appex
ðŸ“‹ [github.com/sta210-s22/ae-11-volcanoes](https://github.com/sta210-s22/ae-11-volcanoes) - Exercise 1
:::

# Build a model

## Split into testing/training

```{r}
set.seed(1234)

volcano_split <- initial_split(volcano)
volcano_train <- training(volcano_split)
volcano_test  <- testing(volcano_split)
```

## Create a recipe

Start with a model that doesn't use geographic information:

```{r}
#| code-line-numbers: "|2|3,4|5|6|7"

volcano_rec1 <- recipe(volcano_type ~ ., data = volcano_train) %>%
  step_rm(latitude, longitude) %>%
  step_other(tectonic_settings) %>%
  step_other(major_rock_1) %>%
  step_dummy(all_nominal_predictors()) %>%
  step_zv(all_predictors()) %>%
  step_center(all_predictors())
```

## Specify a model

```{r}
volcano_spec <- multinom_reg() %>%
  set_engine("nnet")

volcano_spec
```

## Create a workflow

```{r}
#| code-line-numbers: "|1|2|3"

volcano_wflow1 <- workflow() %>%
  add_recipe(volcano_rec1) %>%
  add_model(volcano_spec)

volcano_wflow1
```

## Create cross validation folds

```{r}
set.seed(9876)

volcano_folds <- vfold_cv(volcano_train, v = 5)
volcano_folds
```

## Fit resamples

```{r}
#| code-line-numbers: "|1|2-5"

volcano_fit_rs1 <- volcano_wflow1 %>%
  fit_resamples(
    volcano_folds, 
    control = control_resamples(save_pred = TRUE)
    )

volcano_fit_rs1
```

## Collect metrics

```{r}
collect_metrics(volcano_fit_rs1)
```

## ROC curve

ROC curves for multiclass outcomes use a one-vs-all approach: calculate multiple curves, one per level vs. all other levels.

```{r}
#| output-location: slide

volcano_fit_rs1 %>%
  collect_predictions() %>%
  group_by(id) %>%
  roc_curve(
    truth = volcano_type,
    .pred_Stratovolcano:.pred_Other
  ) %>%
  autoplot()
```

## ROC curve - under the hood

An additional column, `.level`, identifies the "one" column in the one-vs-all calculation:

```{r}
volcano_fit_rs1 %>%
  collect_predictions() %>%
  group_by(id) %>%
  roc_curve(
    truth = volcano_type,
    .pred_Stratovolcano:.pred_Other
  )
```

# Build another model

## Your turn

::: appex
ðŸ“‹ [github.com/sta210-s22/ae-11-volcanoes](https://github.com/sta210-s22/ae-11-volcanoes) - Exercise 2
:::

## Acknowledgements

Inspired by

::: nonincremental
-   https://juliasilge.com/blog/multinomial-volcano-eruptions/
-   https://juliasilge.com/blog/nber-papers/
:::
